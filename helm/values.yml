apiVersion: v2
name: crewmeister-app
description: A Spring Boot application Helm chart for Crewmeister
version: 0.1.0
appVersion: "1.0"

# Metadata for the chart
# Values are typically placed in a separate `values.yaml`, but here we define them inline within the templates.

# Template for the Helm resources
templates:
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: {{ .Release.Name }}-deployment
    spec:
      replicas: {{ .Values.replicaCount | default 2 }}
      selector:
        matchLabels:
          app: {{ .Release.Name }}
      template:
        metadata:
          labels:
            app: {{ .Release.Name }}
        spec:
          containers:
            - name: {{ .Release.Name }}-container
              image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default 'latest' }}"
              imagePullPolicy: {{ .Values.image.pullPolicy | default 'IfNotPresent' }}
              ports:
                - containerPort: {{ .Values.service.port | default 8080 }}
              resources:
                limits:
                  cpu: {{ .Values.resources.limits.cpu | default "1" }}
                  memory: {{ .Values.resources.limits.memory | default "512Mi" }}
                requests:
                  cpu: {{ .Values.resources.requests.cpu | default "500m" }}
                  memory: {{ .Values.resources.requests.memory | default "256Mi" }}
          serviceAccountName: {{ .Values.serviceAccount.name | default "crewmeister-service-account" }}
          imagePullSecrets:
            - name: {{ .Values.imagePullSecrets[0].name | default "crewmeister-secret" }}

  - apiVersion: v1
    kind: Service
    metadata:
      name: {{ .Release.Name }}-service
    spec:
      type: {{ .Values.service.type | default "ClusterIP" }}
      ports:
        - port: {{ .Values.service.port | default 8080 }}
          targetPort: {{ .Values.service.port | default 8080 }}
      selector:
        app: {{ .Release.Name }}

  {{- if .Values.ingress.enabled }}
  - apiVersion: networking.k8s.io/v1
    kind: Ingress
    metadata:
      name: {{ .Release.Name }}-ingress
    spec:
      rules:
        {{- range .Values.ingress.hosts }}
        - host: {{ .host }}
          http:
            paths:
              {{- range .paths }}
              - path: {{ .path }}
                pathType: {{ .pathType }}
                backend:
                  service:
                    name: {{ .Release.Name }}-service
                    port:
                      number: {{ $.Values.service.port | default 8080 }}
              {{- end }}
        {{- end }}
  {{- end }}

  {{- if .Values.autoscaling.enabled }}
  - apiVersion: autoscaling/v2
    kind: HorizontalPodAutoscaler
    metadata:
      name: {{ .Release.Name }}-hpa
    spec:
      scaleTargetRef:
        apiVersion: apps/v1
        kind: Deployment
        name: {{ .Release.Name }}-deployment
      minReplicas: {{ .Values.autoscaling.minReplicas | default 1 }}
      maxReplicas: {{ .Values.autoscaling.maxReplicas | default 100 }}
      targetCPUUtilizationPercentage: {{ .Values.autoscaling.targetCPUUtilizationPercentage | default 80 }}
  {{- end }}

# Values (Inline)
values:
  replicaCount: 2
  image:
    repository: sowr94/spring-boot-application
    pullPolicy: IfNotPresent
    tag: latest
  imagePullSecrets:
    - name: crewmeister-secret
  serviceAccount:
    create: true
    automount: true
    name: "crewmeister-service-account"
  service:
    port: 8080
    type: ClusterIP
  ingress:
    enabled: false
    hosts:
      - host: crewmeister-app.local
        paths:
          - path: /
            pathType: ImplementationSpecific
  resources:
    limits:
      cpu: "1"
      memory: "512Mi"
    requests:
      cpu: "500m"
      memory: "256Mi"
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80